!function(a,b){"use-strict";var c=namespace("Thorsent.PlanningPoker");extend(c,{getBestGuess:function(a){var c=this.mapVotes(a),d=0,e=[],f=0;return b.forEach(c,function(a,b){d+=a,a>f?(e=[b],f=a):a===f&&e.push(b)}),{consensusLevel:this.getConsensusLevel(e,f/d),guesses:e}},getConsensusLevel:function(a,b){return 1!==a.length?"Too Close To Call":1===b?"Unanimous":b>=.75?"Consensus":b>=.5?"Majority":"Plurality"},mapVotes:function(a){var c={};return b.forEach(a,function(a){a.vote&&(c[a.vote.text]?c[a.vote.text]++:c[a.vote.text]=1)}),c}});var d=new Firebase("https://sweltering-torch-73.firebaseio.com/"),e=Thorsent.PlanningPoker.Decks;b.module("thorsent",["ngRoute","ngMaterial","firebase"]).config(["$mdThemingProvider",function(a){a.theme("default").primaryPalette("blue")}]).config(["$routeProvider",function(a){a.when("/",{controller:"LandingCtrl",templateUrl:"views/landing.html"}).when("/:roomId/",{controller:"RoomCtrl",templateUrl:"views/room.html"}).otherwise({redirectTo:"/"})}]).factory("RoomHelper",["$q","$firebase",function(a,b){return{checkIfRoomExists:function(b){var c=a.defer();return d.child("rooms").child(b).once("value",function(a){exists=null!==a.val(),c.resolve(exists)}),c.promise},generateRoomId:function(){return Math.floor(999e5*Math.random()+1e5).toString()},generateUserId:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"===a?b:3&b|8;return c.toString(16)})},getRoom:function(a){var c=d.child("rooms").child(a);return b(c).$asObject()},getUser:function(a,c){var e=d.child("rooms").child(a).child("users").child(c);return b(e).$asObject()},newRoom:function(a,c){b(d.child("rooms").child(a)).$set({deckIndex:c,reveal:!1,updatedAt:Firebase.ServerValue.TIMESTAMP})},newUser:function(a,c,e){b(d.child("rooms").child(a).child("users").child(c)).$set({leader:e,vote:null,voter:!0})}}}]).controller("LandingCtrl",["$rootScope","$scope","$location","$firebase","RoomHelper",function(a,b,c,d,e){b.joinRoom=function(){c.path("/"+b.roomId)},b.newRoom=function(){var b=e.generateRoomId(),d=0;e.newRoom(b,d);var f=e.generateUserId(),g=!0;e.newUser(b,f,g),a.uuid=f,c.path("/"+b)}}]).controller("RoomCtrl",["$rootScope","$scope","$routeParams","$location","RoomHelper",function(b,f,g,h,i){function j(){for(var a in f.room.users)f.room.users[a].vote=null;f.room.reveal=!1}function k(){f.user.leader?d.child("rooms").child(f.room.$id).remove():d.child("rooms").child(f.room.$id).child("users").child(f.user.$id).remove(),b.uuid=null}f.changeDeck=function(){j(),f.room.updatedAt=Firebase.ServerValue.TIMESTAMP,f.room.$save()},f.chooseCard=function(a,b,c){f.user.voter&&(f.user.vote={val:a,text:b,fa:c||""},f.user.$save())},f.reset=function(){j(),f.room.updatedAt=Firebase.ServerValue.TIMESTAMP,f.room.$save()},f.reveal=function(){f.room.reveal=!0,f.room.updatedAt=Firebase.ServerValue.TIMESTAMP,f.room.$save()},f.toggleVoter=function(){f.user.$save()},f.$watch("room.deckIndex",function(){f.selectedDeck=e[f.room.deckIndex]}),f.$watch("room.users",function(){c.getBestGuess(f.room.users,f.selectedDeck)});var l=g.roomId,m=b.uuid;i.checkIfRoomExists(l).then(function(a){if(a){if(f.room=i.getRoom(l),!m){m=i.generateUserId();var b=!1;i.newUser(l,m,b)}f.user=i.getUser(l,m),f.cardDecks=e,f.selectedDeckIndex=0,f.selectedDeck=e[f.selectedDeckIndex].cards}else h.path("/")}),f.$on("$locationChangeStart",function(){k()}),a.onbeforeunload=function(){k()},f.$on("$destroy",function(){delete a.onbeforeunload})}])}(window,window.angular);